- Surround WebServer code in try/except/finally and report any errors
- Add more builtin patterns
    + Add configuration to existing patterns
- When snake loses flash before restarting
- Make Game of life restart when reaches a 1, 2 or 3 period steady state
- Reformat builtin patterns into 2 rows and/or scrolled table
- Better builtin pattern names
- Snake can get caught in infinite loop
- Test script that creates an automatic connection to wifi
    + Use subprocess.popen() not os.popen()
- Commit better demo mathematical patterns
- Commit bootLauncher.sh
- Test IpAddressGetter when not connected to wifi
- Get correct pattern on startup
- Formatting isn't perfect, should count tags and brackets as it goes to avoid using the same close tag or close bracket twice
- Make red green blue name fields all required
- Add and test Thunderstorm pattern

- Maybe some update mechanism by polling github version file?


###################################
## Probably never to be finished ##
###################################

- Create wifi connector object to run before starting the web server
    + Display the ip address on the table
    + Warn the use if network not found
    + Since auto connecting to the wifi is complex on a pi this could be shipped
      out to an esp8266 running micropython which would parse the web requests,
      send the responses and then send the pi serial messages to change patterns
- This has has been made where the esp8266 simply redirects the get requests to the pi via serial then
  the pi parses, acts then sends the html response back to the esp8266 via serial
- Both sides seem to work independently but combining them has been fruitless so far
- MockWebLauncher can be used to show the pi end responding to a get request
- Putty can be used to show the esp8266 sending a get request then forwarding on the returned html